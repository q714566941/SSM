<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test">
	<insert id="insertStudent">     
		insert into student(name,age,score) values(#{name}, #{age}, #{score})       
	</insert>
	
	<insert id="insertStudenCacheId">     
		insert into student(name,age,score) values(#{name}, #{age}, #{score})   
		<selectKey resultType="int" keyProperty="id" order="AFTER">      <!-- AFTER:在sql语句执行之后再获取到id(mysql这样) -->
			select @@identity                                            <!-- 查询到写入mysql后分配的id，然后将对象"id"初始化 -->
		</selectKey>    
	</insert>
	
	<delete id="deleteStudentById">
		delete from student where id=#{xxx}                    <!-- 这里的#{}仅仅是个占位符，放什么都行(不能为空！！！)，自动获取传过来数(对象需要分解) -->
	</delete>
	
	<update id="updateStudent">
		update student set name=#{name},age=#{age},score=#{score} where id=#{id}
	</update>
	
	<select id="selectAllStudents" resultType="Student">        <!-- resulttype对查询的结果进行封装 -->
			select id,name,age,score from student                <!-- id通过反射为setId -->
	</select>
	<select id="selectStudentById" resultType="Student">
			select id,name,age,score from student where id=#{yyy}
	</select>
	<select id="selectStudentsByName" resultType="Student">
			select id,name,age,score from student where name like "%"#{xxx}"%"
	</select>
	<!-- 属性名和数据库字段名不一样 -->
	<resultMap type="Student" id="studentMapper"></resultMap>
	<select id="selectStudentById2" resultMap="studentMapper">
			<!-- select tid id,tname name,tage age,score from student_copy where tid=#{yyy}       方法1、取别名 -->
			select id,name,age,score from student_copy where tid=#{yyy}
	</select>
</mapper>